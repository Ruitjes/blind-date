version: '3.4'

services:
    question-service:
        image: ${DOCKER_REGISTRY-}questionservice
        container_name: question-service
        build:
            context: ./back-end/question-service/
        environment:
            - MongoDbSettings__DatabaseName=question
            - MongoDbSettings__ConnectionString=${QUESTION_SERVICE_CONNECTION_STRING}
            - Auth0Settings__Authority=${AUTH0_AUTHORITY}
            - Auth0Settings__Audience=${AUTH0_AUDIENCE}

    answer-service:
        image: ${DOCKER_REGISTRY-}answerservice
        container_name: answer-service
        build:
            context: ./back-end/answer-service/
        environment:
            - SPRING_MONGODB_URI=${DB_URL_ANSWER}

    search-service:
        image: ${DOCKER_REGISTRY-}searchservice
        container_name: search-service
        build:
            context: ./back-end/search-service/

    report-service:
        image: ${DOCKER_REGISTRY-}reportservice
        container_name: report-service
        build:
            context: ./back-end/report-service/
        environment:
            - DbConnectionString=${DB_URL_REPORT}
            - DbName=report
            - DbReportCollectionName=Report

    ocelot-gateway:
        image: ${DOCKER_REGISTRY-}ocelotgateway
        container_name: ocelot-gateway
        build:
            context: ./back-end/ocelot-gateway/
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_HTTPS_PORT=7000
            - ASPNETCORE_URLS=https://+:443;http://+:80
            - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERTIFICATE_PASSWORD}
            - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/certs/aspnetapp.pfx
        ports:
            - 7000:443
            - 6000:80
        volumes:
            - ./certs:/app/certs

    upload-service:
        image: ${DOCKER_REGISTRY-}uploadservice
        container_name: upload-service
        build:
            context: ./back-end/upload-service
        environment:
            ACCESS_KEY: ${ACCESS_KEY}
            SECRET_ACCESS_KEY: ${SECRET_ACCESS_KEY}
            BUCKET_NAME: ${BUCKET_NAME}

    profile-service:
      image: ${DOCKER_REGISTRY-}profileservice
      container_name: profile-service
      build:
        context: ./back-end/profile-service/
      environment:
          - MongoDbSettings__DatabaseName=profile
          - MongoDbSettings__ConnectionString=${PROFILE_SERVICE_CONNECTION_STRING}
          - Auth0Settings__Authority=${AUTH0_AUTHORITY}
          - Auth0Settings__Audience=${AUTH0_AUDIENCE}