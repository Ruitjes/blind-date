version: '3.4'

services:
    question-service:
        image: questionservice
        container_name: question-service
        build:
            context: ./back-end/question-service/
        environment:
            - MongoDbSettings__DatabaseName=QuestionDB
            - MongoDbSettings__ConnectionString=${DB_URL_QUESTION}
            - Auth0Settings__Authority=${AUTH0_AUTHORITY}
            - Auth0Settings__Audience=${AUTH0_AUDIENCE}

    answer-service:
        image: answerservice
        container_name: answer-service
        build:
            context: ./back-end/answer-service/
        environment:
            - DB_URL_ANSWER=${DB_URL_ANSWER}
        ports:
        - 9092:9092

    search-service:
        image: searchservice
        container_name: search-service
        build:
            context: ./back-end/search-service/

    report-service:
        image: reportservice
        container_name: report-service
        build:
            context: ./back-end/report-service/
        environment:
            - DbConnectionString=${DB_URL_REPORT}
            - DbName=ReportDB
            - DbReportCollectionName=Report
            - Auth0Settings__Authority=${AUTH0_AUTHORITY}
            - Auth0Settings__Audience=${AUTH0_AUDIENCE}
            - AUTH0_MANAGEMENT_SECRET=${AUTH0_MANAGEMENT_SECRET}
            - AUTH0_MANAGEMENT_CLIENT_ID=${AUTH0_MANAGEMENT_CLIENT_ID}
            - AUTH0_MANAGEMENT_AUDIENCE=${AUTH0_MANAGEMENT_AUDIENCE}

    ocelot-gateway:
        image: ocelotgateway
        container_name: ocelot-gateway
        build:
            context: ./back-end/ocelot-gateway/
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_HTTPS_PORT=7000
            - ASPNETCORE_URLS=https://+:443;http://+:80
            - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERTIFICATE_PASSWORD}
            - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/certs/aspnetapp.pfx
        ports:
            - 7000:443
            - 6000:80
        volumes:
            - ./certs:/app/certs

    upload-service:
        image: uploadservice
        container_name: upload-service
        build:
            context: ./back-end/upload-service
        environment:
            AmazonS3Settings__AccessKey: ${ACCESS_KEY}
            AmazonS3Settings__SecretKey: ${SECRET_ACCESS_KEY}
            AmazonS3Settings__BucketName: ${BUCKET_NAME}

    profile-service:
      image: profileservice
      container_name: profile-service
      build:
        context: ./back-end/profile-service/
      environment:
          - MongoDbSettings__DatabaseName=ProfileDB
          - MongoDbSettings__ConnectionString=${DB_URL_PROFILE}
          - Auth0Settings__Authority=${AUTH0_AUTHORITY}
          - Auth0Settings__Audience=${AUTH0_AUDIENCE}